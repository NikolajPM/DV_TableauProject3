<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='GNI (C##CS329E_OBJ66) (2)' inline='true' name='oracle.42115.816526458300 (copy)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_OBJ66' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_obj66'>
        <relation name='GNI' table='[C##CS329E_OBJ66].[GNI]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>37</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALUE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VALUE]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>VALUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='Gross National Income' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Sudan (pre-cession)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Least Developed Countries/Territories&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;East Asia and Pacific&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Eastern and Southern Africa&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;CEE/CIS&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Latin America and Caribbean&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='GNI (C##CS329E_OBJ66) (4)' inline='true' name='oracle.42115.816526458300 (copy 3)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_OBJ66' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_obj66'>
        <relation name='GNI' table='[C##CS329E_OBJ66].[GNI]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>37</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALUE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VALUE]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>VALUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='FOODSECURITY (C##CS329E_NP6593) (2)' inline='true' name='oracle.42115.814500972200 (copy)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_NP6593' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_np6593'>
        <relation name='FOODSECURITY' table='[C##CS329E_NP6593].[FOODSECURITY]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>7</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMMODITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COMMODITY]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>COMMODITY</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>41</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ITEM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ITEM]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>ITEM</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>61</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMOUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AMOUNT]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>AMOUNT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>12</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Amount' datatype='integer' name='[AMOUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Commodity' datatype='string' name='[COMMODITY]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[ITEM]' derivation='None' name='[none:ITEM:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ITEM:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Area Harvested&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Waste + Processed + OtherUtilization&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;FAO Conversion Rate for Root Crops from MT to Grain Equiv. MT&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Imports of goods and services (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gross Domestic Product, constant prices&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Food Supply&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Feed + Seed&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Total Population - Both Sexes&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cereal Food Aid&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Waste + Processed + OtherUtilization - Stock Variation&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Production Quantity&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Import Quantity&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;GDP (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Non-Cereal Food Aid&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Food Availability&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Stock Variation&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Import Unit Value&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Import Value&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Export Quantity&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;WB GDP (constant 2005 US$) / FAO population&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Food Availability per capita&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Exports of goods and services (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Yield&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='GNI (C##CS329E_OBJ66) (3)' inline='true' name='oracle.42115.816526458300 (copy 2)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_OBJ66' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_obj66'>
        <relation name='GNI' table='[C##CS329E_OBJ66].[GNI]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>37</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALUE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VALUE]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>VALUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='GNI (C##CS329E_OBJ66) (5)' inline='true' name='oracle.42115.816526458300 (copy 4)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_OBJ66' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_obj66'>
        <relation name='GNI' table='[C##CS329E_OBJ66].[GNI]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>37</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALUE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VALUE]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>VALUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column caption='GNI per capita' datatype='real' name='[Calculation_4070422170826368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([VALUE])/SUM([oracle.42115.790127395800].[AMOUNT])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='GNI (C##CS329E_OBJ66) (6)' inline='true' name='oracle.42115.816526458300 (copy 5)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_OBJ66' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_obj66'>
        <relation name='GNI' table='[C##CS329E_OBJ66].[GNI]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>37</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALUE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VALUE]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>VALUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column caption='GNI per Capita' datatype='real' name='[Calculation_2470422225354870]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([VALUE])/SUM([oracle.42115.814500972200].[AMOUNT])' scope-isolation='false' />
      </column>
      <column caption='GNI per capita' datatype='real' name='[Calculation_4070422170826368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([VALUE])/SUM([oracle.42115.790127395800].[AMOUNT])' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='oracle.42115.814500972200'>
        <column caption='Amount' datatype='integer' name='[AMOUNT]' role='measure' type='quantitative'>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='FOODSECURITY (C##CS329E_NP6593)' inline='true' name='oracle.42115.814500972200' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_NP6593' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_np6593'>
        <relation name='FOODSECURITY' table='[C##CS329E_NP6593].[FOODSECURITY]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>7</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMMODITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COMMODITY]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>COMMODITY</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>41</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ITEM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ITEM]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>ITEM</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>61</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMOUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AMOUNT]</local-name>
            <parent-name>[FOODSECURITY]</parent-name>
            <remote-alias>AMOUNT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>12</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Amount' datatype='integer' name='[AMOUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Commodity' datatype='string' name='[COMMODITY]' role='dimension' type='nominal'>
      </column>
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[COMMODITY]' derivation='None' name='[none:COMMODITY:nk]' pivot='key' type='nominal' />
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <column-instance column='[ITEM]' derivation='None' name='[none:ITEM:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;DRCongo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;DomRep&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:COMMODITY:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Food Aid&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Total Grains/Cereals&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Root Crops (R&amp;T)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ITEM:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Area Harvested&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Waste + Processed + OtherUtilization&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;FAO Conversion Rate for Root Crops from MT to Grain Equiv. MT&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Imports of goods and services (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gross Domestic Product, constant prices&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Food Supply&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Feed + Seed&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Total Population - Both Sexes&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cereal Food Aid&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Waste + Processed + OtherUtilization - Stock Variation&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Production Quantity&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Import Quantity&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;GDP (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Non-Cereal Food Aid&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Food Availability&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Stock Variation&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Import Unit Value&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Import Value&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Export Quantity&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;WB GDP (constant 2005 US$) / FAO population&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Food Availability per capita&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Exports of goods and services (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Yield&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ITEM:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Total&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Area Harvested&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Waste + Processed + OtherUtilization&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;FAO Conversion Rate for Root Crops from MT to Grain Equiv. MT&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Imports of goods and services (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gross Domestic Product, constant prices&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Food Supply&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Feed + Seed&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Total Population - Both Sexes&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cereal Food Aid&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Waste + Processed + OtherUtilization - Stock Variation&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Production Quantity&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Import Quantity&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;GDP (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Non-Cereal Food Aid&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Food Availability&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Stock Variation&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Import Unit Value&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Import Value&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Export Quantity&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;WB GDP (constant 2005 US$) / FAO population&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Food Availability per capita&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Exports of goods and services (constant 2005 US$)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Yield&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='GNI (C##CS329E_OBJ66)' inline='true' name='oracle.42115.816526458300' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_OBJ66' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_obj66'>
        <relation name='GNI' table='[C##CS329E_OBJ66].[GNI]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>37</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALUE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VALUE]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>VALUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <aliases>
          <alias key='%null%' value='Liberia' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTRY:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='GNI (C##CS329E_OBJ66) (7)' inline='true' name='oracle.42115.816526458300 (copy 6)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_OBJ66' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_obj66'>
        <relation name='GNI' table='[C##CS329E_OBJ66].[GNI]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>37</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VALUE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VALUE]</local-name>
            <parent-name>[GNI]</parent-name>
            <remote-alias>VALUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unit' datatype='string' name='[UNIT]' role='dimension' type='nominal'>
      </column>
      <column caption='GNI' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bar Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='FOODSECURITY (C##CS329E_NP6593) (2)' name='oracle.42115.814500972200 (copy)' />
            <datasource caption='GNI (C##CS329E_OBJ66) (3)' name='oracle.42115.816526458300 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42115.814500972200 (copy)'>
            <column caption='Amount' datatype='integer' name='[AMOUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[ITEM]' derivation='None' name='[none:ITEM:nk]' pivot='key' type='nominal' />
            <column-instance column='[AMOUNT]' derivation='Sum' name='[sum:AMOUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42115.816526458300 (copy 2)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[VALUE]' derivation='Sum' name='[sum:VALUE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42115.814500972200 (copy)].[none:ITEM:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Export Quantity&quot;' />
              <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Import Quantity&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.42115.816526458300 (copy 2)].[none:COUNTRY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Iceland&quot;' />
              <groupfilter from='&quot;Indonesia&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42115.814500972200 (copy)].[none:ITEM:nk]</column>
            <column>[oracle.42115.816526458300 (copy 2)].[none:COUNTRY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42115.814500972200 (copy)].[none:ITEM:nk]' />
              <size column='[oracle.42115.816526458300 (copy 2)].[sum:VALUE:qk]' />
              <lod column='[oracle.42115.814500972200 (copy)].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42115.814500972200 (copy)].[sum:AMOUNT:qk]</rows>
        <cols>[oracle.42115.816526458300 (copy 2)].[none:COUNTRY:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Food per Cap'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Food Availability per Capita (in kg/cap)&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GNI (C##CS329E_OBJ66) (6)' name='oracle.42115.816526458300 (copy 5)' />
            <datasource caption='FOODSECURITY (C##CS329E_NP6593)' name='oracle.42115.814500972200' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42115.814500972200'>
            <column caption='Amount' datatype='integer' name='[AMOUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[ITEM]' derivation='None' name='[none:ITEM:nk]' pivot='key' type='nominal' />
            <column-instance column='[AMOUNT]' derivation='Sum' name='[sum:AMOUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42115.816526458300 (copy 5)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42115.814500972200].[none:ITEM:nk]'>
            <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Food Availability per capita&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42115.816526458300 (copy 5)].[none:COUNTRY:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Eastern and Southern Africa&quot;' />
              <groupfilter from='&quot;Egypt&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Gambia&quot;' />
              <groupfilter from='&quot;Germany&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Iceland&quot;' />
              <groupfilter from='&quot;Indonesia&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Solomon Islands&quot;' />
              <groupfilter from='&quot;South Africa&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42115.814500972200].[none:ITEM:nk]</column>
            <column>[oracle.42115.816526458300 (copy 5)].[none:COUNTRY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.42115.816526458300 (copy 5)].[Longitude (generated)]' field-type='quantitative' max='13627483.058788408' min='-13627483.058788409' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.42115.816526458300 (copy 5)].[Latitude (generated)]' field-type='quantitative' max='6854754.2123737019' min='-5042516.3661574116' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' value='solid' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42115.814500972200].[sum:AMOUNT:qk]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='subtotal' value='#b40f1e' />
            <format attr='border-style' data-class='subtotal' value='dashed' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#b7d2f2' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42115.814500972200].[sum:AMOUNT:qk]' />
              <text column='[oracle.42115.814500972200].[sum:AMOUNT:qk]' />
              <lod column='[oracle.42115.816526458300 (copy 5)].[none:COUNTRY:nk]' />
              <geometry column='[oracle.42115.816526458300 (copy 5)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42115.816526458300 (copy 5)].[Latitude (generated)]</rows>
        <cols>[oracle.42115.816526458300 (copy 5)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GNI per Cap'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gross National Income per Capita (in thousand $USD/cap)&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GNI (C##CS329E_OBJ66) (6)' name='oracle.42115.816526458300 (copy 5)' />
            <datasource caption='FOODSECURITY (C##CS329E_NP6593)' name='oracle.42115.814500972200' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42115.814500972200'>
            <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[ITEM]' derivation='None' name='[none:ITEM:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42115.816526458300 (copy 5)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column caption='GNI per Capita' datatype='real' name='[Calculation_2470422225354870]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([VALUE])/SUM([oracle.42115.814500972200].[AMOUNT])' scope-isolation='false' />
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2470422225354870]' derivation='User' name='[usr:Calculation_2470422225354870:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42115.814500972200].[none:ITEM:nk]'>
            <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Total Population - Both Sexes&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42115.816526458300 (copy 5)].[none:COUNTRY:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Gambia&quot;' />
              <groupfilter from='&quot;Germany&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Iceland&quot;' />
              <groupfilter from='&quot;Indonesia&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Italy&quot;' />
              <groupfilter from='&quot;Japan&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Solomon Islands&quot;' />
              <groupfilter from='&quot;South Africa&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[oracle.42115.816526458300 (copy 5)].[usr:Calculation_2470422225354870:qk]' included-values='in-range'>
            <min>0.8324873096446701</min>
            <max>22.929292929292931</max>
          </filter>
          <slices>
            <column>[oracle.42115.814500972200].[none:ITEM:nk]</column>
            <column>[oracle.42115.816526458300 (copy 5)].[none:COUNTRY:nk]</column>
            <column>[oracle.42115.816526458300 (copy 5)].[usr:Calculation_2470422225354870:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.42115.816526458300 (copy 5)].[Longitude (generated)]' field-type='quantitative' max='13627483.058788408' min='-13627483.058788409' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.42115.816526458300 (copy 5)].[Latitude (generated)]' field-type='quantitative' max='6854754.2123737019' min='-5042516.3661574116' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42115.816526458300 (copy 5)].[usr:Calculation_2470422225354870:qk]' />
              <text column='[oracle.42115.816526458300 (copy 5)].[usr:Calculation_2470422225354870:qk]' />
              <lod column='[oracle.42115.816526458300 (copy 5)].[none:COUNTRY:nk]' />
              <geometry column='[oracle.42115.816526458300 (copy 5)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42115.816526458300 (copy 5)].[Latitude (generated)]</rows>
        <cols>[oracle.42115.816526458300 (copy 5)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GNI vs Grain'>
      <table>
        <view>
          <datasources>
            <datasource caption='FOODSECURITY (C##CS329E_NP6593)' name='oracle.42115.814500972200' />
            <datasource caption='GNI (C##CS329E_OBJ66) (7)' name='oracle.42115.816526458300 (copy 6)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42115.814500972200'>
            <column caption='Amount' datatype='integer' name='[AMOUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Commodity' datatype='string' name='[COMMODITY]' role='dimension' type='nominal'>
            </column>
            <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[COMMODITY]' derivation='None' name='[none:COMMODITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[ITEM]' derivation='None' name='[none:ITEM:nk]' pivot='key' type='nominal' />
            <column-instance column='[AMOUNT]' derivation='Sum' name='[sum:AMOUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42115.816526458300 (copy 6)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' type='nominal'>
            </column>
            <column caption='GNI' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[VALUE]' derivation='Sum' name='[sum:VALUE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42115.814500972200].[none:COMMODITY:nk]'>
            <groupfilter function='member' level='[none:COMMODITY:nk]' member='&quot;Total Grains/Cereals&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42115.814500972200].[none:ITEM:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Cereal Food Aid&quot;' />
              <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Export Quantity&quot;' />
              <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Food Supply&quot;' />
              <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Import Quantity&quot;' />
              <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Production Quantity&quot;' />
              <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;Total&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42115.814500972200].[none:ITEM:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Production Quantity&quot;</bucket>
              <bucket>&quot;Import Quantity&quot;</bucket>
              <bucket>&quot;Export Quantity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[oracle.42115.816526458300 (copy 6)].[none:COUNTRY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Latin America and Caribbean&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Thailand&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42115.816526458300 (copy 6)].[none:COUNTRY:nk]</column>
            <column>[oracle.42115.814500972200].[none:COMMODITY:nk]</column>
            <column>[oracle.42115.814500972200].[none:ITEM:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42115.814500972200].[none:ITEM:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.42115.816526458300 (copy 6)].[none:COUNTRY:nk] / ([oracle.42115.816526458300 (copy 6)].[sum:VALUE:ok] / ([oracle.42115.814500972200].[none:COMMODITY:nk] / [oracle.42115.814500972200].[none:ITEM:nk])))</rows>
        <cols>[oracle.42115.814500972200].[sum:AMOUNT:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pie Diagram'>
      <table>
        <view>
          <datasources>
            <datasource caption='FOODSECURITY (C##CS329E_NP6593)' name='oracle.42115.814500972200' />
            <datasource caption='GNI (C##CS329E_OBJ66)' name='oracle.42115.816526458300' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42115.814500972200'>
            <column caption='Amount' datatype='integer' name='[AMOUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Commodity' datatype='string' name='[COMMODITY]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[COMMODITY]' derivation='None' name='[none:COMMODITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AMOUNT]' derivation='Sum' name='[sum:AMOUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42115.816526458300'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <aliases>
                <alias key='%null%' value='Liberia' />
              </aliases>
            </column>
            <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[VALUE]' derivation='Sum' name='[sum:VALUE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42115.814500972200].[none:COMMODITY:nk]'>
            <groupfilter function='member' level='[none:COMMODITY:nk]' member='&quot;Population&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42115.816526458300].[none:COUNTRY:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.42115.816526458300].[none:COUNTRY:nk]</column>
            <column>[oracle.42115.814500972200].[none:COMMODITY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[oracle.42115.814500972200].[none:YEAR:qk]' value='12' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='1056' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[oracle.42115.816526458300].[none:COUNTRY:nk]' />
              <size column='[oracle.42115.816526458300].[sum:VALUE:qk]' />
              <text column='[oracle.42115.816526458300].[none:COUNTRY:nk]' />
              <text column='[oracle.42115.814500972200].[none:COMMODITY:nk]' />
              <text column='[oracle.42115.814500972200].[sum:AMOUNT:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42115.814500972200].[none:YEAR:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Scatter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='FOODSECURITY (C##CS329E_NP6593)' name='oracle.42115.814500972200' />
            <datasource caption='GNI (C##CS329E_OBJ66) (4)' name='oracle.42115.816526458300 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42115.814500972200'>
            <column caption='Amount' datatype='integer' name='[AMOUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Item' datatype='string' name='[ITEM]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[ITEM]' derivation='None' name='[none:ITEM:nk]' pivot='key' type='nominal' />
            <column-instance column='[AMOUNT]' derivation='Sum' name='[sum:AMOUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42115.816526458300 (copy 3)'>
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
            </column>
            <column caption='Value' datatype='integer' name='[VALUE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[VALUE]' derivation='Sum' name='[sum:VALUE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42115.814500972200].[none:ITEM:nk]'>
            <groupfilter function='member' level='[none:ITEM:nk]' member='&quot;GDP (constant 2005 US$)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42115.816526458300 (copy 3)].[none:COUNTRY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;Albania&quot;' />
              <groupfilter from='&quot;Andorra&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Ecuador&quot;' />
              <groupfilter from='&quot;El Salvador&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Iceland&quot;' />
              <groupfilter from='&quot;Indonesia&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Solomon Islands&quot;' />
              <groupfilter from='&quot;South Africa&quot;' function='range' level='[none:COUNTRY:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42115.814500972200].[none:ITEM:nk]</column>
            <column>[oracle.42115.816526458300 (copy 3)].[none:COUNTRY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[oracle.42115.814500972200].[sum:AMOUNT:qk]' scope='rows' value='Gross Domestic Product' />
            <format attr='subtitle' class='0' field='[oracle.42115.814500972200].[sum:AMOUNT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[oracle.42115.814500972200].[sum:AMOUNT:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[oracle.42115.816526458300 (copy 3)].[sum:VALUE:qk]' scope='cols' value='Gross National Income' />
            <format attr='subtitle' class='0' field='[oracle.42115.816526458300 (copy 3)].[sum:VALUE:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[oracle.42115.816526458300 (copy 3)].[sum:VALUE:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42115.816526458300 (copy 3)].[none:COUNTRY:nk]' />
              <text column='[oracle.42115.816526458300 (copy 3)].[none:COUNTRY:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42115.814500972200].[sum:AMOUNT:qk]</rows>
        <cols>[oracle.42115.816526458300 (copy 3)].[sum:VALUE:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='World Maps'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='GNI per Cap' show-title='true' w='84000' x='0' y='50000'>
              </zone>
              <zone h='50000' id='7' name='Food per Cap' show-title='true' w='84000' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='7750' id='6' name='GNI per Cap' pane-specification-id='0' param='[oracle.42115.816526458300 (copy 5)].[usr:Calculation_2470422225354870:qk]' type='color' w='16000' x='84000' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pie Diagram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42115.816526458300].[none:COUNTRY:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42115.816526458300].[sum:VALUE:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42115.814500972200].[:Measure Names]</field>
          <field>[oracle.42115.814500972200].[none:COMMODITY:nk]</field>
          <field>[oracle.42115.814500972200].[none:ITEM:nk]</field>
          <field>[oracle.42115.814500972200].[none:UNIT:nk]</field>
          <field>[oracle.42115.814500972200].[none:YEAR:qk]</field>
          <field>[oracle.42115.816526458300].[none:COUNTRY:nk]</field>
          <field>[oracle.42115.816526458300].[none:UNIT:nk]</field>
          <field>[oracle.42115.816526458300].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Bar Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42115.814500972200 (copy)].[none:ITEM:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42115.816526458300 (copy 2)].[sum:VALUE:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42115.814500972200 (copy)].[:Measure Names]</field>
          <field>[oracle.42115.814500972200 (copy)].[none:COMMODITY:nk]</field>
          <field>[oracle.42115.814500972200 (copy)].[none:COUNTRY:nk]</field>
          <field>[oracle.42115.814500972200 (copy)].[none:ITEM:nk]</field>
          <field>[oracle.42115.814500972200 (copy)].[none:UNIT:nk]</field>
          <field>[oracle.42115.814500972200 (copy)].[none:YEAR:ok]</field>
          <field>[oracle.42115.814500972200 (copy)].[none:YEAR:qk]</field>
          <field>[oracle.42115.816526458300 (copy 2)].[none:COUNTRY:nk]</field>
          <field>[oracle.42115.816526458300 (copy 2)].[none:UNIT:nk]</field>
          <field>[oracle.42115.816526458300 (copy 2)].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[oracle.42115.816526458300 (copy 3)].[none:COUNTRY:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42115.814500972200].[none:COMMODITY:nk]</field>
          <field>[oracle.42115.814500972200].[none:COUNTRY:nk]</field>
          <field>[oracle.42115.814500972200].[none:ITEM:nk]</field>
          <field>[oracle.42115.816526458300 (copy 3)].[none:COUNTRY:nk]</field>
          <field>[oracle.42115.816526458300 (copy 3)].[none:UNIT:nk]</field>
          <field>[oracle.42115.816526458300 (copy 3)].[none:YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='GNI vs Grain'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42115.814500972200].[none:ITEM:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42115.816526458300 (copy 6)].[none:COUNTRY:nk]' show-domain='false' type='filter' />
            <card param='[oracle.42115.814500972200].[none:COMMODITY:nk]' type='filter' />
            <card param='[oracle.42115.814500972200].[none:ITEM:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42115.814500972200].[none:COMMODITY:nk]</field>
          <field>[oracle.42115.814500972200].[none:COUNTRY:nk]</field>
          <field>[oracle.42115.814500972200].[none:ITEM:nk]</field>
          <field>[oracle.42115.816526458300 (copy 6)].[none:COUNTRY:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='GNI per Cap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42115.816526458300 (copy 5)].[usr:Calculation_2470422225354870:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42115.814500972200].[none:ITEM:nk]</field>
          <field>[oracle.42115.816526458300 (copy 5)].[usr:Calculation_4070422170826368:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Food per Cap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42115.814500972200].[sum:AMOUNT:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42115.814500972200].[none:ITEM:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='World Maps'>
      <active id='7' />
      <zones>
        <zone name='GNI per Cap'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[oracle.42115.816526458300 (copy 5)].[usr:Calculation_4070422170826368:qk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Food per Cap'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='GNI per Cap' pane-specification-id='0' param='[oracle.42115.816526458300 (copy 5)].[usr:Calculation_2470422225354870:qk]' type='color' />
      </zones>
    </window>
    <window class='hidden-worksheet' name='Food per Cap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42115.814500972200].[sum:AMOUNT:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42115.814500972200].[none:ITEM:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='GNI per Cap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42115.814500972200].[none:ITEM:nk]</field>
          <field>[oracle.42115.816526458300 (copy 4)].[usr:Calculation_4070422170826368:qk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Pie Diagram' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bar Graph' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot' width='192'>
      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
      A/x/VyMblglrCp8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GNI vs Grain' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GNI per Cap' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Food per Cap' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Maps' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
